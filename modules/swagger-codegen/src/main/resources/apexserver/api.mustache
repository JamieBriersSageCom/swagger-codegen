{{#operations}}

@RestResource(urlMapping='/{{{pathPrefix}}}/*')
global with sharing class {{classname}}Controller {

	@HttpGet
	global static string Get(){
		{{#allParams}}
		{{dataType}} {{paramName}} = null;
		{{/allParams}}
		String pathPrefix = '/{{{pathPrefix}}}';
		String requestUri = RestContext.request.requestURI;
		if(!requestUri.endsWith('/')){
		    requestUri = requestUri + '/';
		}

        String path = requestUri.substringAfter(pathPrefix);
		if (false){}
        {{#operation}}
        else if(Pattern.matches('{{{path}}}{{#hasParams}}.*{{/hasParams}}$', path)){
            String params = path.substringAfter('{{{path}}}');
            return {{operationId}}Handler(params);
        }
        {{/operation}}
        else{}
        return 'failed';
	}

	
{{#operation}}
	//{{operationId}}
	private static {{returnType}} {{operationId}}Handler(String path){
        {{#hasParams}}
        if(!path.endsWith('/')){
            path = path.substringBeforeLast('/');
        }
        String[] args = path.split('/');
        {{#pathParams}}
        {{dataType}} {{paramName}} = args.remove(0);
        {{/pathParams}}
        {{#queryParams}}
        {{dataType}} {{paramName}} = RestContext.request.params.get('{{paramName}}');
        {{/queryParams}}
        {{/hasParams}}
	    return {{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
	}
	
{{/operation}}


{{#operation}}
	//{{operationId}}
	private static {{returnType}} {{operationId}}({{#allParams}}{{dataType}} {{paramName}} {{#hasMore}}, {{/hasMore}}{{/allParams}}){
        //Do the thing!
        return '{{operationId}}';
	}

{{/operation}}
}
{{/operations}}